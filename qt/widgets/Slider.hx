package qt.widgets;

import cpp.Pointer;
import cpp.RawPointer;

class Slider extends AbstractSlider {
    public function new() {
        if (_ref == null) {
            _ref = QSlider.createInstance().reinterpret();
        }
        
        super();
    }
    
    
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Helpers
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    public var sliderRef(get, null):Pointer<QSlider>;
    private function get_sliderRef():Pointer<QSlider> {
        return _ref.reinterpret();
    }
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////
// Extern
//////////////////////////////////////////////////////////////////////////////////////////////////////////
@:unreflective
@:include('QtWidgets/QSlider.h')
@:native('QSlider')
extern class QSlider extends qt.widgets.AbstractSlider.QAbstractSlider {
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    // Creation functions
    //////////////////////////////////////////////////////////////////////////////////////////////////////////
    @:native("new QSlider")              private static function _new():RawPointer<QSlider>;
                                        public static inline function createInstance():Pointer<QSlider> {
                                            return Pointer.fromRaw(_new());
                                        }
}